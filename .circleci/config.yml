version: 2.1

jobs:
  build-and-publish:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - run: |
          curl -L https://go.dev/dl/go1.23.0.linux-amd64.tar.gz | sudo tar -xzC /usr/local
          echo 'export PATH=$PATH:/usr/local/go/bin' >> ~/.bashrc
          source ~/.bashrc
      # - run: go install github.com/oapi-codegen/oapi-codegen/v2/cmd/oapi-codegen@latest
      # - run: |
      #     # Build for multiple architectures
      #     echo "Building for AMD64..."
      #     GOOS=linux GOARCH=amd64 go build -o bin/somana-linux-amd64 ./cmd/server
      #     
      #     echo "Building for ARM64..."
      #     GOOS=linux GOARCH=arm64 go build -o bin/somana-linux-arm64 ./cmd/server
      #     
      #     echo "Building for macOS AMD64..."
      #     GOOS=darwin GOARCH=amd64 go build -o bin/somana-darwin-amd64 ./cmd/server
      #     
      #     echo "Building for macOS ARM64 (Apple Silicon)..."
      #     GOOS=darwin GOARCH=arm64 go build -o bin/somana-darwin-arm64 ./cmd/server
      #     
      #     echo "Build complete! Binaries:"
      #     ls -la bin/
      - run: |
          # Install GitHub CLI
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y
      - run: |
          # Debug environment
          echo "Checking environment variables..."
          echo "GITHUB_TOKEN is set: $([ -n "$GITHUB_TOKEN" ] && echo "YES" || echo "NO")"
          echo "GITHUB_TOKEN length: ${#GITHUB_TOKEN}"
          echo "GITHUB_TOKEN first 10 chars: ${GITHUB_TOKEN:0:10}..."
          
          # Authenticate GitHub CLI
          echo "Authenticating GitHub CLI..."
          echo "$GITHUB_TOKEN" | gh auth login --with-token
          echo "GitHub CLI authentication status:"
          gh auth status
          
          # Test basic GitHub CLI functionality
          echo "Testing GitHub CLI..."
          gh repo view --json name,owner
          
          # Auto-increment version based on commit count
          COMMIT_COUNT=$(git rev-list --count HEAD)
          VERSION="v1.0.$COMMIT_COUNT"
          echo "Using auto-incremented version: $VERSION"
          
          # Comment out actual release creation for debugging
          # echo "Publishing OpenAPI spec with version: $VERSION"
          # make publish-openapi VERSION=$VERSION
          # 
          # echo "Creating GitHub release with version: $VERSION"
          # gh release create $VERSION \
          #   --title "Somana $VERSION" \
          #   --notes "Somana $VERSION - Built and tested on CircleCI with multi-architecture support for Linux and macOS"

workflows:
  version: 2
  build-and-publish:
    jobs:
      - build-and-publish:
          filters:
            branches:
              only: main