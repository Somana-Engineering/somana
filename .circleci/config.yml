version: 2.1

jobs:
  build:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run: |
          curl -L https://go.dev/dl/go1.23.0.linux-amd64.tar.gz | sudo tar -xzC /usr/local
          echo 'export PATH=$PATH:/usr/local/go/bin' >> ~/.bashrc
          source ~/.bashrc
      - run: go install github.com/oapi-codegen/oapi-codegen/v2/cmd/oapi-codegen@latest
      - run: make build
      - store_artifacts:
          path: bin/somana
          destination: binary

  publish:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run: |
          curl -L https://go.dev/dl/go1.23.0.linux-amd64.tar.gz | sudo tar -xzC /usr/local
          echo 'export PATH=$PATH:/usr/local/go/bin' >> ~/.bashrc
          source ~/.bashrc
      - run: go install github.com/oapi-codegen/oapi-codegen/v2/cmd/oapi-codegen@latest
      - run: |
          # Build for multiple architectures
          echo "Building for AMD64..."
          GOOS=linux GOARCH=amd64 go build -o bin/somana-linux-amd64 ./cmd/server
          
          echo "Building for ARM64..."
          GOOS=linux GOARCH=arm64 go build -o bin/somana-linux-arm64 ./cmd/server
          
          echo "Building for macOS AMD64..."
          GOOS=darwin GOARCH=amd64 go build -o bin/somana-darwin-amd64 ./cmd/server
          
          echo "Building for macOS ARM64 (Apple Silicon)..."
          GOOS=darwin GOARCH=arm64 go build -o bin/somana-darwin-arm64 ./cmd/server
          
          
          echo "Build complete! Binaries:"
          ls -la bin/
      - run: |
          # Install GitHub CLI
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y
      - run: |
          # Auto-increment version based on commit count
          COMMIT_COUNT=$(git rev-list --count HEAD)
          VERSION="v1.0.$COMMIT_COUNT"
          echo "Using auto-incremented version: $VERSION"
          
          # Publish OpenAPI spec with the same version
          make publish-openapi VERSION=$VERSION
          
          # Create GitHub release with all binaries
          gh release create $VERSION \
            bin/somana-linux-amd64 \
            bin/somana-linux-arm64 \
            bin/somana-darwin-amd64 \
            bin/somana-darwin-arm64 \
            --title "Somana $VERSION" \
            --notes "## Somana $VERSION

### Downloads

#### Linux
- **AMD64**: [somana-linux-amd64](https://github.com/lukewing/somana/releases/download/$VERSION/somana-linux-amd64)
- **ARM64**: [somana-linux-arm64](https://github.com/lukewing/somana/releases/download/$VERSION/somana-linux-arm64)

#### macOS
- **Intel**: [somana-darwin-amd64](https://github.com/lukewing/somana/releases/download/$VERSION/somana-darwin-amd64)
- **Apple Silicon**: [somana-darwin-arm64](https://github.com/lukewing/somana/releases/download/$VERSION/somana-darwin-arm64)


### Installation

#### Linux AMD64
\`\`\`bash
curl -L https://github.com/lukewing/somana/releases/download/$VERSION/somana-linux-amd64 -o somana
chmod +x somana
./somana
\`\`\`

#### Linux ARM64
\`\`\`bash
curl -L https://github.com/lukewing/somana/releases/download/$VERSION/somana-linux-arm64 -o somana
chmod +x somana
./somana
\`\`\`

#### macOS (Intel)
\`\`\`bash
curl -L https://github.com/lukewing/somana/releases/download/$VERSION/somana-darwin-amd64 -o somana
chmod +x somana
./somana
\`\`\`

#### macOS (Apple Silicon)
\`\`\`bash
curl -L https://github.com/lukewing/somana/releases/download/$VERSION/somana-darwin-arm64 -o somana
chmod +x somana
./somana
\`\`\`


### API Documentation
- OpenAPI Spec: [Download](https://github.com/lukewing/somana/releases/download/$VERSION/openapi.yaml)

### Changes
- Built and tested on CircleCI
- Multi-architecture support (Linux, macOS)
- Automated release process"
        environment:
          GITHUB_TOKEN: $GITHUB_TOKEN

workflows:
  version: 2
  build-and-publish:
    jobs:
      - build
      - publish:
          filters:
            branches:
              only: main