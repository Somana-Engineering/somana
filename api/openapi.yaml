openapi: 3.0.0
info:
  title: Somana API
  version: 1.0.0
  description: API for managing resources in the Somana system
  contact:
    name: API Support
    email: support@somana.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://api.somana.com
    description: Production server

paths:
  /health:
    get:
      summary: Health check
      description: Check if the API is running
      tags:
        - Health
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  message:
                    type: string
                    example: "Somana API is running"
                  version:
                    type: string
                    example: "1.0.0"

  /api/v1/resources:
    get:
      summary: List all resources
      description: Retrieve a list of all resources
      tags:
        - Resources
      parameters:
        - name: active
          in: query
          description: Filter by active status
          schema:
            type: boolean
      responses:
        '200':
          description: List of resources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create a new resource
      description: Create a new resource with the provided details
      tags:
        - Resources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceCreateRequest'
      responses:
        '201':
          description: Resource created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/resources/active:
    get:
      summary: List active resources
      description: Retrieve a list of only active resources
      tags:
        - Resources
      responses:
        '200':
          description: List of active resources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/resources/{id}:
    get:
      summary: Get resource by ID
      description: Retrieve a specific resource by its ID
      tags:
        - Resources
      parameters:
        - name: id
          in: path
          required: true
          description: Resource ID
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Resource details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update resource
      description: Update an existing resource
      tags:
        - Resources
      parameters:
        - name: id
          in: path
          required: true
          description: Resource ID
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceUpdateRequest'
      responses:
        '200':
          description: Resource updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete resource
      description: Delete a resource (soft delete)
      tags:
        - Resources
      parameters:
        - name: id
          in: path
          required: true
          description: Resource ID
          schema:
            type: integer
            minimum: 1
      responses:
        '204':
          description: Resource deleted successfully
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Resource:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the resource
          example: 1
        name:
          type: string
          description: Name of the resource
          example: "My Resource"
          maxLength: 255
        description:
          type: string
          description: Description of the resource
          example: "This is a sample resource"
        active:
          type: boolean
          description: Whether the resource is active
          example: true
        created_at:
          type: string
          format: date-time
          description: When the resource was created
          example: "2025-08-03T12:16:39.158615-04:00"
        updated_at:
          type: string
          format: date-time
          description: When the resource was last updated
          example: "2025-08-03T12:16:48.453818-04:00"
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: When the resource was deleted (soft delete)
          example: null
      required:
        - id
        - name
        - active
        - created_at
        - updated_at

    ResourceCreateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the resource
          example: "My Resource"
          maxLength: 255
        description:
          type: string
          description: Description of the resource
          example: "This is a sample resource"
      required:
        - name

    ResourceUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the resource
          example: "Updated Resource"
          maxLength: 255
        description:
          type: string
          description: Description of the resource
          example: "Updated description"
        active:
          type: boolean
          description: Whether the resource is active
          example: true

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Resource not found"

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: API key for authentication 