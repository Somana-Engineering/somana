// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package generated

import (
	"time"
)

// Defines values for HostStatus.
const (
	HostStatusMaintenance HostStatus = "maintenance"
	HostStatusOffline     HostStatus = "offline"
	HostStatusOnline      HostStatus = "online"
)

// Defines values for HostHeartbeatRequestStatus.
const (
	HostHeartbeatRequestStatusMaintenance HostHeartbeatRequestStatus = "maintenance"
	HostHeartbeatRequestStatusOffline     HostHeartbeatRequestStatus = "offline"
	HostHeartbeatRequestStatusOnline      HostHeartbeatRequestStatus = "online"
)

// Defines values for HostUpdateRequestStatus.
const (
	HostUpdateRequestStatusMaintenance HostUpdateRequestStatus = "maintenance"
	HostUpdateRequestStatusOffline     HostUpdateRequestStatus = "offline"
	HostUpdateRequestStatusOnline      HostUpdateRequestStatus = "online"
)

// Defines values for GetApiV1HostsParamsStatus.
const (
	GetApiV1HostsParamsStatusMaintenance GetApiV1HostsParamsStatus = "maintenance"
	GetApiV1HostsParamsStatusOffline     GetApiV1HostsParamsStatus = "offline"
	GetApiV1HostsParamsStatusOnline      GetApiV1HostsParamsStatus = "online"
)

// Error defines model for Error.
type Error struct {
	// Error Error message
	Error *string `json:"error,omitempty"`
}

// Host defines model for Host.
type Host struct {
	// CreatedAt When the host was registered
	CreatedAt time.Time `json:"created_at"`

	// DeletedAt When the host was deregistered (soft delete)
	DeletedAt *time.Time `json:"deleted_at"`

	// Hostname Hostname of the system
	Hostname string `json:"hostname"`

	// Id Unique identifier for the host
	Id int64 `json:"id"`

	// IpAddress Primary IP address
	IpAddress string `json:"ip_address"`

	// OsName Operating system name
	OsName string `json:"os_name"`

	// OsVersion Operating system version
	OsVersion string `json:"os_version"`

	// Status Current host status
	Status HostStatus `json:"status"`

	// UpdatedAt When the host was last updated
	UpdatedAt time.Time `json:"updated_at"`
}

// HostStatus Current host status
type HostStatus string

// HostCreateRequest defines model for HostCreateRequest.
type HostCreateRequest struct {
	// Hostname Hostname of the system
	Hostname string `json:"hostname"`

	// IpAddress Primary IP address
	IpAddress string `json:"ip_address"`

	// OsName Operating system name
	OsName string `json:"os_name"`

	// OsVersion Operating system version
	OsVersion string `json:"os_version"`
}

// HostHeartbeatRequest defines model for HostHeartbeatRequest.
type HostHeartbeatRequest struct {
	// Status Current host status
	Status *HostHeartbeatRequestStatus `json:"status,omitempty"`
}

// HostHeartbeatRequestStatus Current host status
type HostHeartbeatRequestStatus string

// HostUpdateRequest defines model for HostUpdateRequest.
type HostUpdateRequest struct {
	// Hostname Hostname of the system
	Hostname *string `json:"hostname,omitempty"`

	// IpAddress Primary IP address
	IpAddress *string `json:"ip_address,omitempty"`

	// Status Current host status
	Status *HostUpdateRequestStatus `json:"status,omitempty"`
}

// HostUpdateRequestStatus Current host status
type HostUpdateRequestStatus string

// GetApiV1HostsParams defines parameters for GetApiV1Hosts.
type GetApiV1HostsParams struct {
	// Status Filter by host status
	Status *GetApiV1HostsParamsStatus `form:"status,omitempty" json:"status,omitempty"`
}

// GetApiV1HostsParamsStatus defines parameters for GetApiV1Hosts.
type GetApiV1HostsParamsStatus string

// PostApiV1HostsJSONRequestBody defines body for PostApiV1Hosts for application/json ContentType.
type PostApiV1HostsJSONRequestBody = HostCreateRequest

// PutApiV1HostsIdJSONRequestBody defines body for PutApiV1HostsId for application/json ContentType.
type PutApiV1HostsIdJSONRequestBody = HostUpdateRequest

// PostApiV1HostsIdHeartbeatJSONRequestBody defines body for PostApiV1HostsIdHeartbeat for application/json ContentType.
type PostApiV1HostsIdHeartbeatJSONRequestBody = HostHeartbeatRequest
